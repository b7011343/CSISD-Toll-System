@page "/"
@using Microsoft.AspNetCore.Identity
@using CSISD_Tolling_System.Data
@using CSISD_Tolling_System.Data.Service
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor httpContextAccessor
@inject ApplicationDbContext db
@inject InvoiceService invoiceService

<AuthorizeView Roles="road-user">
    <Authorized>
        <div class="container">
            <h7 class="mb-5 font-weight-bold">Customer ID: @customerId</h7>
            <table class="table table-hover table-bordered mt-2 table-sm">
                <thead>
                    <tr>
                        <th class="text-center" colspan="4">Toll History</th>
                    </tr>
                    <tr>
                        <th scope="col">Entry</th>
                        <th scope="col">Exit</th>
                        <th scope="col">Charge</th>
                        <th scope="col">Paid</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        var invoices = invoiceService.getUserUnpaidInvoices(customerId);
                        foreach (var invoice in invoices)
                        {
                            <tr>
                                <td>@invoice.EntryTimestamp</td>
                                <td>@invoice.ExitTimestamp</td>
                                <td>£@invoice.Fee</td>
                                <td>@(invoice.Paid ? "✔" : "❌")</td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </Authorized>
</AuthorizeView>

<AuthorizeView Roles="toll-operator">
    <Authorized>
        <div class="container">
            <table class="table table-hover table-bordered mt-2 table-sm">
                <thead>
                    <tr>
                        <th class="text-center" colspan="6">Unpaid User Tolls</th>
                    </tr>
                    <tr>
                        <th scope="col">User Email</th>
                        <th scope="col">User ID</th>
                        <th scope="col">Entry</th>
                        <th scope="col">Exit</th>
                        <th scope="col">Charge</th>
                        <th scope="col">Paid</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        var invoices = invoiceService.getAllUnpaidInvoices();
                        foreach (var invoice in invoices)
                        {
                            string userEmail = db.Users.Where(x => x.Id == invoice.UserId).First().Email;
                            <tr>
                                <td>@userEmail</td>
                                <td>@invoice.UserId</td>
                                <td>@invoice.EntryTimestamp</td>
                                <td>@invoice.ExitTimestamp</td>
                                <td>£@invoice.Fee</td>
                                <td>@(invoice.Paid ? "✔" : "❌")</td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </Authorized>
</AuthorizeView>

<AuthorizeView Roles="admin">
    <Authorized>
        <div class="container">
            <h2>You are an admin</h2>
        </div>
    </Authorized>
</AuthorizeView>

<AuthorizeView>
    <NotAuthorized>
        <section class="jumbotron text-center">
            <div class="container">
                <h1 class="jumbotron-heading">Welcome to the <b>Nordic Tolling Service</b></h1>
                <p class="lead text-muted">
                    Register or login to make use of this system...
                </p>
                <p>
                    <a href="/Identity/Account/Register" class="btn btn-primary my-2">Register</a>
                    <a href="/Identity/Account/Login" class="btn btn-secondary my-2">Login</a>
                </p>
            </div>
        </section>
    </NotAuthorized>
</AuthorizeView>

@code {
    private string customerId;
    
    protected override void OnInitialized()
    {
        string userName = httpContextAccessor.HttpContext.User.Identity.Name;
        if (userName != null)
        {
            customerId = db.Users.Where(x => x.Email == userName).FirstOrDefault().Id;
        }
    }
}
